// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String   @unique
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Track {
  id       String  @id @default(uuid())
  name     String
  artistId String?
  albumId  String?
  duration Int

  artist   Artist?        @relation(fields: [artistId], references: [id], onDelete: SetNull)
  album    Album?         @relation(fields: [albumId], references: [id], onDelete: SetNull)
  favorite FavoriteTrack? @relation("favorite_track")
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean

  tracks   Track[]
  albums   Album[]
  favorite FavoriteArtist?
}

model Album {
  id       String  @id @default(uuid())
  name     String
  year     Int
  artistId String?

  artist   Artist?        @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks   Track[]
  favorite FavoriteAlbum?
}

model FavoriteTrack {
  trackId    String   @unique
  track      Track    @relation("favorite_track", fields: [trackId], references: [id], onDelete: Cascade)
  favoriteId Int
  favorite   Favorite @relation(fields: [favoriteId], references: [id], onDelete: Cascade)

  @@id([trackId, favoriteId])
}

model FavoriteAlbum {
  albumId    String   @unique
  album      Album    @relation(fields: [albumId], references: [id], onDelete: Cascade)
  favoriteId Int
  favorite   Favorite @relation(fields: [favoriteId], references: [id], onDelete: Cascade)

  @@id([albumId, favoriteId])
}

model FavoriteArtist {
  artistId   String   @unique
  artist     Artist   @relation(fields: [artistId], references: [id], onDelete: Cascade)
  favoriteId Int
  favorite   Favorite @relation(fields: [favoriteId], references: [id], onDelete: Cascade)

  @@id([artistId, favoriteId])
}

model Favorite {
  id Int @id @default(1)

  tracks  FavoriteTrack[]
  albums  FavoriteAlbum[]
  artists FavoriteArtist[]
}